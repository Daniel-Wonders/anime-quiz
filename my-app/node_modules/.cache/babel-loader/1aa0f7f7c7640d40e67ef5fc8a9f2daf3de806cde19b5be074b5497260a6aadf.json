{"ast":null,"code":"import React from'react';import{decode}from'html-entities';import he from'he';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Question(props){const[isAnswered,setIsAnswered]=React.useState(false);const[answersArr,setAnswersArr]=React.useState([]);const[randomIndex,setRandomIndex]=React.useState(Math.floor(Math.random()*4));React.useEffect(()=>{//setRandomIndex(Math.floor(Math.random() * 4))\nconst decodedWrongAnswers=props.wrongs.map(answer=>{return he.decode(answer);});//Had to decode each str\nconst decodedRightAnswer=he.decode(props.right);//const rightAnswer = typeof decodedRightAnswer === 'string' ? decodedRightAnswer : console.log(\"soy el erroneao\");\n// Create a new array by concatenating the decoded right answer into wrong answers\nconst answers=[...decodedWrongAnswers];answers.splice(randomIndex,0,decodedRightAnswer);setAnswersArr(answers);},[]);function handleRightAnswer(){setIsAnswered(true);props.incrementCounter();props.incrementTotalCounter();}function handleWrongAnswer(){setIsAnswered(true);props.incrementTotalCounter();}const buttons=answersArr.map((answer,index)=>{const isRight=index===randomIndex;let btnClass=\"\";if(isAnswered&&isRight){btnClass=\"rightBtn\";}return/*#__PURE__*/_jsx(\"button\",{className:\"btn\"+\" \"+btnClass,onClick:isRight?handleRightAnswer:handleWrongAnswer,disabled:isAnswered,children:answer},index);});return/*#__PURE__*/_jsxs(\"div\",{id:\"Question\",children:[/*#__PURE__*/_jsx(\"p\",{children:he.decode(props.ask)}),/*#__PURE__*/_jsx(\"div\",{id:\"buttons\",children:buttons})]});}export default Question;","map":{"version":3,"names":["React","decode","he","jsx","_jsx","jsxs","_jsxs","Question","props","isAnswered","setIsAnswered","useState","answersArr","setAnswersArr","randomIndex","setRandomIndex","Math","floor","random","useEffect","decodedWrongAnswers","wrongs","map","answer","decodedRightAnswer","right","answers","splice","handleRightAnswer","incrementCounter","incrementTotalCounter","handleWrongAnswer","buttons","index","isRight","btnClass","className","onClick","disabled","children","id","ask"],"sources":["C:/Users/lauta/Documents/GitHub/anime-quiz/my-app/src/Components/Question.js"],"sourcesContent":["import React from 'react';\r\nimport { decode } from 'html-entities';\r\nimport he from 'he';\r\n\r\nfunction Question(props) {\r\n    const [isAnswered, setIsAnswered] = React.useState(false);\r\n    const [answersArr, setAnswersArr] = React.useState([]);\r\n    const [randomIndex,setRandomIndex] = React.useState(Math.floor(Math.random() * 4))\r\n\r\n    React.useEffect(() => {\r\n        //setRandomIndex(Math.floor(Math.random() * 4))\r\n        const decodedWrongAnswers=props.wrongs.map((answer)=>{return (he.decode(answer))})//Had to decode each str\r\n        const decodedRightAnswer = he.decode(props.right);\r\n\r\n        //const rightAnswer = typeof decodedRightAnswer === 'string' ? decodedRightAnswer : console.log(\"soy el erroneao\");\r\n\r\n        // Create a new array by concatenating the decoded right answer into wrong answers\r\n        const answers = [...decodedWrongAnswers];\r\n        answers.splice(randomIndex, 0, decodedRightAnswer);\r\n\r\n\r\n        setAnswersArr(answers);\r\n    }, []); \r\n\r\n    function handleRightAnswer() {\r\n        setIsAnswered(true);\r\n        props.incrementCounter();\r\n        props.incrementTotalCounter()\r\n        \r\n    }\r\n\r\n    function handleWrongAnswer() {\r\n        setIsAnswered(true);\r\n        props.incrementTotalCounter()\r\n\r\n    }\r\n\r\n    const buttons = answersArr.map((answer, index) => {\r\n        const isRight = index === randomIndex;\r\n\r\n        let btnClass = \"\";\r\n        if (isAnswered && isRight) {\r\n            btnClass = \"rightBtn\";\r\n        }\r\n\r\n        return (\r\n            <button\r\n                className={\"btn\" + \" \" + btnClass}\r\n                key={index}\r\n                onClick={isRight ? handleRightAnswer : handleWrongAnswer}\r\n                disabled={isAnswered}\r\n            >\r\n                {answer}\r\n            </button>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div id=\"Question\">\r\n            <p>{he.decode(props.ask)}</p>\r\n\r\n            <div id=\"buttons\">{buttons}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Question;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,MAAM,KAAQ,eAAe,CACtC,MAAO,CAAAC,EAAE,KAAM,IAAI,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpB,QAAS,CAAAC,QAAQA,CAACC,KAAK,CAAE,CACrB,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGV,KAAK,CAACW,QAAQ,CAAC,KAAK,CAAC,CACzD,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGb,KAAK,CAACW,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACG,WAAW,CAACC,cAAc,CAAC,CAAGf,KAAK,CAACW,QAAQ,CAACK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAG,CAAC,CAAC,CAAC,CAElFlB,KAAK,CAACmB,SAAS,CAAC,IAAM,CAClB;AACA,KAAM,CAAAC,mBAAmB,CAACZ,KAAK,CAACa,MAAM,CAACC,GAAG,CAAEC,MAAM,EAAG,CAAC,MAAQ,CAAArB,EAAE,CAACD,MAAM,CAACsB,MAAM,CAAC,CAAC,CAAC,CAAC;AAClF,KAAM,CAAAC,kBAAkB,CAAGtB,EAAE,CAACD,MAAM,CAACO,KAAK,CAACiB,KAAK,CAAC,CAEjD;AAEA;AACA,KAAM,CAAAC,OAAO,CAAG,CAAC,GAAGN,mBAAmB,CAAC,CACxCM,OAAO,CAACC,MAAM,CAACb,WAAW,CAAE,CAAC,CAAEU,kBAAkB,CAAC,CAGlDX,aAAa,CAACa,OAAO,CAAC,CAC1B,CAAC,CAAE,EAAE,CAAC,CAEN,QAAS,CAAAE,iBAAiBA,CAAA,CAAG,CACzBlB,aAAa,CAAC,IAAI,CAAC,CACnBF,KAAK,CAACqB,gBAAgB,CAAC,CAAC,CACxBrB,KAAK,CAACsB,qBAAqB,CAAC,CAAC,CAEjC,CAEA,QAAS,CAAAC,iBAAiBA,CAAA,CAAG,CACzBrB,aAAa,CAAC,IAAI,CAAC,CACnBF,KAAK,CAACsB,qBAAqB,CAAC,CAAC,CAEjC,CAEA,KAAM,CAAAE,OAAO,CAAGpB,UAAU,CAACU,GAAG,CAAC,CAACC,MAAM,CAAEU,KAAK,GAAK,CAC9C,KAAM,CAAAC,OAAO,CAAGD,KAAK,GAAKnB,WAAW,CAErC,GAAI,CAAAqB,QAAQ,CAAG,EAAE,CACjB,GAAI1B,UAAU,EAAIyB,OAAO,CAAE,CACvBC,QAAQ,CAAG,UAAU,CACzB,CAEA,mBACI/B,IAAA,WACIgC,SAAS,CAAE,KAAK,CAAG,GAAG,CAAGD,QAAS,CAElCE,OAAO,CAAEH,OAAO,CAAGN,iBAAiB,CAAGG,iBAAkB,CACzDO,QAAQ,CAAE7B,UAAW,CAAA8B,QAAA,CAEpBhB,MAAM,EAJFU,KAKD,CAAC,CAEjB,CAAC,CAAC,CAEF,mBACI3B,KAAA,QAAKkC,EAAE,CAAC,UAAU,CAAAD,QAAA,eACdnC,IAAA,MAAAmC,QAAA,CAAIrC,EAAE,CAACD,MAAM,CAACO,KAAK,CAACiC,GAAG,CAAC,CAAI,CAAC,cAE7BrC,IAAA,QAAKoC,EAAE,CAAC,SAAS,CAAAD,QAAA,CAAEP,OAAO,CAAM,CAAC,EAChC,CAAC,CAEd,CAEA,cAAe,CAAAzB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}