{"ast":null,"code":"import React from\"react\";import Question from\"./Question\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Trivia(props){const[questions,setQuestions]=React.useState([]);const[fetchError,setFetchError]=React.useState(null);React.useEffect(()=>{const fetchQuestions=async()=>{try{const response=await fetch(\"https://opentdb.com/api.php?amount=5&category=31&type=multiple\");if(!response.ok){props.crashed();throw new Error('Network response was not ok');}const data=await response.json();setQuestions(data.results||[]);}catch(error){props.crashed();setFetchError(error.message);}};fetchQuestions();},[]);let counterColor=props.counter===0?\"redCounter\":\"greenCounter\";counterColor=props.counter===5?\"goldenCounter\":counterColor;return/*#__PURE__*/_jsxs(\"div\",{id:\"Trivia\",className:props.dimmed?\"dimmed\":\"\",children:[/*#__PURE__*/_jsxs(\"p\",{id:\"correctCounter\",children:[\"YOU'VE ANSWERED CORRECTLY \\xA0\",/*#__PURE__*/_jsx(\"span\",{id:counterColor,children:props.counter}),\"/5 QUESTIONS\"]}),fetchError?/*#__PURE__*/_jsxs(\"div\",{className:\"error\",children:[\"Error fetching data: \",fetchError]}):questions.length>0?questions.map((question,index)=>/*#__PURE__*/_jsx(Question,{ask:question.question,right:question.correct_answer,wrongs:question.incorrect_answers,incrementCounter:props.incrementCounter,incrementTotalCounter:props.incrementTotalCounter},index)):/*#__PURE__*/_jsx(\"img\",{src:process.env.PUBLIC_URL+\"/loading.svg\"})]});}","map":{"version":3,"names":["React","Question","jsx","_jsx","jsxs","_jsxs","Trivia","props","questions","setQuestions","useState","fetchError","setFetchError","useEffect","fetchQuestions","response","fetch","ok","crashed","Error","data","json","results","error","message","counterColor","counter","id","className","dimmed","children","length","map","question","index","ask","right","correct_answer","wrongs","incorrect_answers","incrementCounter","incrementTotalCounter","src","process","env","PUBLIC_URL"],"sources":["C:/Users/lauta/Documents/GitHub/anime-quiz/my-app/src/Components/Trivia.js"],"sourcesContent":["import React from \"react\";\r\nimport Question from \"./Question\";\r\n\r\nexport default function Trivia(props){\r\n    const [questions, setQuestions] = React.useState([]);\r\n    const [fetchError, setFetchError] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        const fetchQuestions = async () => {\r\n            try {\r\n                const response = await fetch(\"https://opentdb.com/api.php?amount=5&category=31&type=multiple\");\r\n                if (!response.ok) {\r\n                    props.crashed()\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                const data = await response.json();\r\n                setQuestions(data.results || []);\r\n            } catch (error) {\r\n                props.crashed()\r\n                setFetchError(error.message);\r\n            }\r\n        };\r\n    \r\n        fetchQuestions();\r\n    }, []);\r\n    \r\n\r\n    let counterColor=props.counter===0?\"redCounter\":\"greenCounter\"\r\n    counterColor= props.counter===5 ? \"goldenCounter\":counterColor\r\n  \r\n\r\n    return (\r\n        <div id=\"Trivia\" className={props.dimmed?\"dimmed\":\"\"}>\r\n            <p id=\"correctCounter\">\r\n                YOU'VE ANSWERED CORRECTLY &nbsp;\r\n                <span id={counterColor}>{props.counter}</span>\r\n                /5 QUESTIONS\r\n            </p>\r\n            {fetchError ? (\r\n                <div className=\"error\">Error fetching data: {fetchError}</div>\r\n            ) : (\r\n                questions.length > 0 ? (\r\n                    questions.map((question, index) => (\r\n                        <Question\r\n                            key={index}\r\n                            ask={question.question}\r\n                            right={question.correct_answer}\r\n                            wrongs={question.incorrect_answers}\r\n                            incrementCounter={props.incrementCounter}\r\n                            incrementTotalCounter={props.incrementTotalCounter}\r\n                        />\r\n                    ))\r\n                ) : (\r\n                    <img src={process.env.PUBLIC_URL+`/loading.svg`} />\r\n                )\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,cAAe,SAAS,CAAAC,MAAMA,CAACC,KAAK,CAAC,CACjC,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGT,KAAK,CAACU,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGZ,KAAK,CAACU,QAAQ,CAAC,IAAI,CAAC,CAExDV,KAAK,CAACa,SAAS,CAAC,IAAM,CAClB,KAAM,CAAAC,cAAc,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,gEAAgE,CAAC,CAC9F,GAAI,CAACD,QAAQ,CAACE,EAAE,CAAE,CACdV,KAAK,CAACW,OAAO,CAAC,CAAC,CACf,KAAM,IAAI,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAClD,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAClCZ,YAAY,CAACW,IAAI,CAACE,OAAO,EAAI,EAAE,CAAC,CACpC,CAAE,MAAOC,KAAK,CAAE,CACZhB,KAAK,CAACW,OAAO,CAAC,CAAC,CACfN,aAAa,CAACW,KAAK,CAACC,OAAO,CAAC,CAChC,CACJ,CAAC,CAEDV,cAAc,CAAC,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAGN,GAAI,CAAAW,YAAY,CAAClB,KAAK,CAACmB,OAAO,GAAG,CAAC,CAAC,YAAY,CAAC,cAAc,CAC9DD,YAAY,CAAElB,KAAK,CAACmB,OAAO,GAAG,CAAC,CAAG,eAAe,CAACD,YAAY,CAG9D,mBACIpB,KAAA,QAAKsB,EAAE,CAAC,QAAQ,CAACC,SAAS,CAAErB,KAAK,CAACsB,MAAM,CAAC,QAAQ,CAAC,EAAG,CAAAC,QAAA,eACjDzB,KAAA,MAAGsB,EAAE,CAAC,gBAAgB,CAAAG,QAAA,EAAC,gCAEnB,cAAA3B,IAAA,SAAMwB,EAAE,CAAEF,YAAa,CAAAK,QAAA,CAAEvB,KAAK,CAACmB,OAAO,CAAO,CAAC,eAElD,EAAG,CAAC,CACHf,UAAU,cACPN,KAAA,QAAKuB,SAAS,CAAC,OAAO,CAAAE,QAAA,EAAC,uBAAqB,CAACnB,UAAU,EAAM,CAAC,CAE9DH,SAAS,CAACuB,MAAM,CAAG,CAAC,CAChBvB,SAAS,CAACwB,GAAG,CAAC,CAACC,QAAQ,CAAEC,KAAK,gBAC1B/B,IAAA,CAACF,QAAQ,EAELkC,GAAG,CAAEF,QAAQ,CAACA,QAAS,CACvBG,KAAK,CAAEH,QAAQ,CAACI,cAAe,CAC/BC,MAAM,CAAEL,QAAQ,CAACM,iBAAkB,CACnCC,gBAAgB,CAAEjC,KAAK,CAACiC,gBAAiB,CACzCC,qBAAqB,CAAElC,KAAK,CAACkC,qBAAsB,EAL9CP,KAMR,CACJ,CAAC,cAEF/B,IAAA,QAAKuC,GAAG,CAAEC,OAAO,CAACC,GAAG,CAACC,UAAU,eAAgB,CAAE,CAEzD,EACA,CAAC,CAEd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}